---
interface Props {
  headings: { slug: string; text: string }[];
}
---

<button class="toggle-toc-btn">≡</button>

<nav class="toc">
  <ul id="toc-list"></ul>
</nav>

<script>
  let isExpanded = false;

  const toggleToc = () => {
    const toc = document.querySelector('.toc');
    const btn = document.querySelector('.toggle-toc-btn');
    
    if (!toc || !btn) return;
    
    isExpanded = !isExpanded;
    
    if (isExpanded) {
      toc.classList.add('expanded');
      btn.textContent = '×';
    } else {
      toc.classList.remove('expanded');
      btn.textContent = '≡';
    }
  };

  // 绑定按钮点击事件
  const toggleBtn = document.querySelector('.toggle-toc-btn');
  if (toggleBtn) {
    toggleBtn.addEventListener('click', toggleToc);
  }

  const headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
  const tocList = document.getElementById('toc-list');

  if (tocList) {
    headings.forEach((heading) => {
      const level = parseInt(heading.tagName.charAt(1));
      const text = heading.textContent || '';
      const id = heading.id || text.toLowerCase().replace(/\s+/g, '-');
      
      heading.id = id;
      
      const li = document.createElement('li');
      li.classList.add(`level-${level}`);
      
      const a = document.createElement('a');
      a.href = `#${id}`;
      a.textContent = text;
      
      li.appendChild(a);
      tocList.appendChild(li);
    });

    // 自动收起导航栏
    document.addEventListener('click', (e) => {
      const toc = document.querySelector('.toc');
      const btn = document.querySelector('.toggle-toc-btn');
      
      if (toc && btn && e.target instanceof Node) {
        if (!toc.contains(e.target) && !btn.contains(e.target) && isExpanded) {
          toggleToc();
        }
      }
    });
  }
</script>
